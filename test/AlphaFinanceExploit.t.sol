// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

import "forge-std/Test.sol";


contract AlphaFinanceExploitTest is Test {
    address internal attacker;

    function setUp() public {
        // fork maninnet
        uint256 blocknum = 11846490; // the block Alpha Homora V2 Exploiter created evil spell
        string memory rpc = vm.envString("MAINNET_RPC_URL");
        vm.createSelectFork(rpc, blocknum);
        assertEq(block.number, blocknum);

        attacker = makeAddr("attacker");
        vm.deal(attacker, 9.94264 ether); // the Exploiter's balance
    }

    function testExploit() public {
        /**
         * EXPLOIT START *
         */
        vm.startPrank(attacker);
        vm.stopPrank();
        /**
         * EXPLOIT END *
         */
        validation();
        console.log(unicode"\n\n You successfully reporduced the attack\n\n");
    }

    function validation() internal {
        
    }
}
